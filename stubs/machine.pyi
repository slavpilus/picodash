"""Type stubs for MicroPython machine module"""
from typing import Any, Callable, List, Optional, Tuple, Union

# Classes
class Pin:
    IN: int
    OUT: int
    PULL_UP: int
    PULL_DOWN: int
    
    def __init__(self, id: int, mode: int = -1, pull: int = -1) -> None: ...
    def init(self, mode: int = -1, pull: int = -1) -> None: ...
    def value(self, x: Optional[int] = None) -> int: ...
    def on(self) -> None: ...
    def off(self) -> None: ...

class RTC:
    def __init__(self) -> None: ...
    def datetime(self, datetimetuple: Optional[Tuple[int, int, int, int, int, int, int, int]] = None) -> Tuple[int, int, int, int, int, int, int, int]: ...

# Functions
def freq(hz: Optional[int] = None) -> int: ...
def reset() -> None: ...
def reset_cause() -> int: ...
def unique_id() -> bytes: ...
def time_pulse_us(pin: Pin, pulse_level: int, timeout_us: int = 1000000) -> int: ...
def disable_irq() -> Any: ...
def enable_irq(state: Any) -> None: ...